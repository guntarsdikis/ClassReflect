{
  "permissions": {
    "allow": [
      "Bash(aws sts:*)",
      "Bash(aws ec2 describe-instances:*)",
      "Bash(aws ssm describe-instance-information:*)",
      "Bash(aws ec2 describe-volumes:*)",
      "Bash(aws ec2 describe-tags:*)",
      "Bash(aws configure get:*)",
      "Bash(aws ec2 describe-availability-zones:*)",
      "Bash(aws ssm start-session:*)",
      "Bash(ssh:*)",
      "Bash(aws rds describe-db-clusters:*)",
      "Bash(aws rds describe-db-instances:*)",
      "Bash(aws ec2 describe-snapshots:*)",
      "Bash(aws iam attach-role-policy:*)",
      "Bash(aws iam create-instance-profile:*)",
      "Bash(aws iam add-role-to-instance-profile:*)",
      "Bash(aws ec2 associate-iam-instance-profile:*)",
      "Bash(curl:*)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(npm init:*)",
      "Bash(npm install:*)",
      "Bash(chmod:*)",
      "Bash(aws s3api create-bucket:*)",
      "Bash(aws s3api put-bucket-versioning:*)",
      "Bash(terraform:*)",
      "Bash(aws ecr create-repository:*)",
      "Bash(npm run build:*)",
      "Bash(docker build:*)",
      "Bash(docker tag:*)",
      "Bash(docker push:*)",
      "Bash(aws s3api put-bucket-encryption:*)",
      "Bash(aws sqs create-queue:*)",
      "Bash(aws ecs create-cluster:*)",
      "Bash(aws amplify create-app:*)",
      "Bash(aws amplify update-app:*)",
      "Bash(aws amplify create-branch:*)",
      "Bash(aws amplify get-app:*)",
      "Bash(aws amplify get-job:*)",
      "Bash(aws amplify list-jobs:*)",
      "Bash(aws amplify update-branch:*)",
      "Bash(aws amplify start-job:*)",
      "Bash(aws route53 list-hosted-zones:*)",
      "Bash(aws amplify create-domain-association:*)",
      "Bash(aws amplify get-domain-association:*)",
      "Bash(aws route53 list-resource-record-sets:*)",
      "Bash(aws ecs describe-services:*)",
      "Bash(aws ecs list-tasks:*)",
      "Bash(aws logs tail:*)",
      "Bash(aws ecs update-service:*)",
      "Bash(aws ecs describe-tasks:*)",
      "Bash(mysql:*)",
      "Bash(aws elbv2 describe-load-balancers:*)",
      "Bash(aws ecs stop-task:*)",
      "Bash(aws acm request-certificate:*)",
      "Bash(aws acm describe-certificate:*)",
      "Bash(aws elbv2 describe-target-groups:*)",
      "Bash(aws ec2 describe-key-pairs:*)",
      "Bash(aws ec2 run-instances:*)",
      "Bash(zip:*)",
      "Bash(aws lambda invoke:*)",
      "Bash(cat:*)",
      "Bash(aws lambda update-function-code:*)",
      "Bash(aws sqs get-queue-attributes:*)",
      "Bash(aws logs describe-log-groups:*)",
      "Bash(aws sqs:*)",
      "Bash(for i in {1..3})",
      "Bash(do )",
      "Bash(done)",
      "Bash(aws ec2 get-console-output:*)",
      "Bash(python3:*)",
      "Bash(aws s3 ls:*)",
      "Bash(aws ec2 wait:*)",
      "Bash(aws ec2 modify-instance-attribute:*)",
      "Bash(aws s3 cp:*)",
      "Bash(aws ec2 start-instances:*)",
      "Bash(aws events list-rules:*)",
      "Bash(npm run docker:build:*)",
      "Bash(npm run docker:push:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(npm create:*)",
      "Bash(touch:*)",
      "Bash(aws amplify list-apps:*)",
      "Bash(aws amplify list-branches:*)",
      "Bash(VITE_API_URL=https://api.classreflect.gdwd.co.uk,)",
      "Bash(VITE_APP_URL=https://classreflect.gdwd.co.uk,)",
      "Bash(VITE_AWS_REGION=eu-west-2)",
      "Bash(aws amplify list-domain-associations:*)",
      "Bash(aws amplify:*)",
      "mcp__brave-search__brave_web_search",
      "WebFetch(domain:aws-amplify-prod-eu-west-2-artifacts.s3.eu-west-2.amazonaws.com)",
      "Bash(npm info:*)",
      "Bash(aws ecs describe-task-definition:*)",
      "Bash(aws:*)",
      "Bash(lsof:*)",
      "mcp__puppeteer__puppeteer_navigate",
      "Bash(node:*)",
      "Bash(npx tsc:*)",
      "Bash(grep:*)",
      "Bash(scp:*)",
      "Bash(docker exec:*)",
      "Bash(docker inspect:*)",
      "Bash(docker logs:*)",
      "Bash(npm run lint)",
      "Bash(sed:*)",
      "Bash(npm run type-check:*)",
      "mcp__puppeteer__puppeteer_screenshot",
      "mcp__puppeteer__puppeteer_fill",
      "mcp__puppeteer__puppeteer_click",
      "mcp__puppeteer__puppeteer_evaluate",
      "WebFetch(domain:www.assemblyai.com)",
      "Read(/Users/guntarsdikis/Desktop/**)",
      "Read(/Users/guntarsdikis/Desktop/**)",
      "Read(/Users/guntarsdikis/Desktop/**)",
      "Read(/Users/guntarsdikis/Desktop/**)",
      "WebFetch(domain:prod.ferndocs.com)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(pandoc:*)",
      "Bash(open:*)",
      "Bash(scripts/deployment/deploy.sh:*)",
      "Read(//tmp/**)",
      "Read(//Users/guntarsdikis/Desktop/**)",
      "Bash(awk:*)",
      "Bash(unset:*)",
      "Bash(./auto-compare-schemas.sh:*)"
    ],
    "deny": [
      "Bash(npm start)",
      "Bash(npm start:*)",
      "Bash(npm run dev)",
      "Bash(npm run dev:*)",
      "Bash(npm run start)",
      "Bash(npm run start:*)"
    ],
    "ask": [],
    "defaultMode": "acceptEdits"
  }
}